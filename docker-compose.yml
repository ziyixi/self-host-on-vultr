# * =============================================== global networks and volumes =============================================== * #
networks:
  caddy:
  unami:
  changedetection:
  wordpress:


volumes: {}

services:
  # * =============================================== caddy =============================================== * #
  caddy:
    image: caddy:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./env/Caddyfile:/etc/caddy/Caddyfile
      - ./data/caddy:/data
      - ./config/caddy:/config
    networks:
      - caddy

  # * =============================================== unami =============================================== * #
  unami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    environment:
      DATABASE_URL: postgresql://umami:umami@unami-db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: randomhashsalt
    depends_on:
      - unami-db
    restart: always
    networks:
      - caddy
      - unami

  unami-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: umami
    volumes:
      - ./data/unami:/var/lib/postgresql/data
    restart: always
    networks:
      - unami

  # * =============================================== changedetection =============================================== * #
  changedetection:
    image: ghcr.io/dgtlmoon/changedetection.io:latest
    container_name: changedetection
    hostname: changedetection
    volumes:
      - ./data/changedetection:/datastore
    environment:
      - BASE_URL=https://changedetection.ziyixi.science
      - USE_X_SETTINGS=1
      - FETCH_WORKERS=2
    restart: always
    networks:
      - caddy
      - changedetection

  browser-chrome:
    hostname: browser-chrome
    image: selenium/standalone-chrome-debug:latest
    environment:
      - VNC_NO_PASSWORD=1
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1080
      - SCREEN_DEPTH=24
    volumes:
      - /dev/shm:/dev/shm
    restart: always
    networks:
      - changedetection

  # * =============================================== frp =============================================== * #
  frp:
    # ref: https://calxu.github.io/note/20200301_vpn_2/
    image: snowdreamtech/frps:0.51.0
    container_name: frp
    restart: always
    ports:
      - "12345:12345"
      - "7002:7002"
    volumes:
      - ./env/frps.ini:/etc/frp/frps.ini
      - ./data/frps.log:/log/frps.log

  # * =============================================== flame =============================================== * #
  flame:
    image: pawelmalak/flame:latest
    container_name: flame
    volumes:
      - ./data/flame:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    env_file: ./env/flame.env
    restart: always
    networks:
      - caddy

  # * =============================================== job-finder =============================================== * #
  ofelia:
    image: mcuadros/ofelia:latest
    container_name: ofelia
    depends_on:
      - jobfinder
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

  jobfinder:
    image: ghcr.io/ziyixi/job-finder:latest
    container_name: jobfinder
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.jobfinder.schedule: "@every 1h"
      ofelia.job-exec.jobfinder.no-overlap: 'true'
      ofelia.job-exec.jobfinder.command: "sh run_job.sh > log.txt"
    volumes:
      - ./data/job_finder/log.txt:/app/job_finder/log.txt
      - ./data/job_finder/job_finder.sqlite:/app/job_finder/job_finder.sqlite
    env_file: ./env/job_finder.env
    restart: always

  sqlite-web:
    image: ghcr.io/ziyixi/sqlite-web:latest
    container_name: sqlite-web
    depends_on:
      - jobfinder
    volumes:
      - ./data/job_finder:/data
    env_file: ./env/sqlite_web.env
    networks:
      - caddy
    restart: always

  # * =============================================== cloudmailin-todoist-app =============================================== * #
  cloudmailin-todoist-app:
    image: ghcr.io/ziyixi/cloudmailin-todoist-sync:latest
    container_name: cloudmailin-todoist-app
    restart: always
    env_file: ./env/cloudmailin.env
    networks:
      - caddy

  # * =============================================== timetagger =============================================== * #
  timetagger:
    image: ghcr.io/almarklein/timetagger
    container_name: timetagger
    volumes:
      - ./data/timetagger:/root/_timetagger
    env_file: ./env/timetagger.env
    networks:
      - caddy

  # * =============================================== siyuan =============================================== * #
  siyuan:
    image: b3log/siyuan:latest
    container_name: siyuan
    volumes:
      - ./data/siyuan:/siyuan/workspace
    user: "1000:1000"
    command: ['--workspace=/siyuan/workspace/', '--accessAuthCode=${SiyuanAuthCode}']
    networks:
      - caddy

  # * =============================================== wordpress =============================================== * #
  wordpress:
    build:
      context: .
      dockerfile: Dockerfile_wordpress
    container_name: wordpress
    restart: always
    depends_on:
      - wordpress-db
    environment:
      WORDPRESS_DB_HOST: wordpress-db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - ./data/wordpress:/var/www/html
    networks:
      - caddy
      - wordpress

  wordpress-db:
    image: mysql:8.0
    container_name: wordpress-db
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    volumes:
      - ./data/wordpress-db:/var/lib/mysql
    networks:
      - wordpress

  # * =============================================== backup =============================================== * #
  backup:
    image: offen/docker-volume-backup:latest
    restart: always
    env_file: ./env/backup.env
    volumes:
      - ./data:/backup/data:ro
      - ./config:/backup/config:ro  
      - ./env:/backup/env:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
